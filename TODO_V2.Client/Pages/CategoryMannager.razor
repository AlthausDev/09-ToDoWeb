@page "/Categories"
@using TODO_V2.Client.Data
@using TODO_V2.Shared.Models
@using TODO_V2.Shared.Models.Enum
<PageTitle>ToDo List!</PageTitle>

@inject HttpClient Http
@inject NavigationManager NavManager
@inject IJSRuntime JS
@inject ILocalStorageService storageService


<Modal @ref="ModalInstance" Size="ModalSize.Regular" ShowCloseButton="false" UseStaticBackdrop="false" IsVerticallyCentered="true" />

<ConfirmDialog @ref="dialog" />

<Toasts class="p-3" Messages="messages" AutoHide="true" Delay="6000" StackLength="5" Placement="ToastsPlacement.TopRight" />

<nav class="upper-buttons">
    <button type="button" class="button-style" @onclick="() => OnClickCategoryForm(null)">Nueva Categoría</button>
</nav>

@RenderLoadingIndicator()

@if (!isLoading)
{

    //TODO Colocar navegación en la parte superior
    <Grid TItem="Category"
          AllowFiltering="false"
          AllowPaging="true"
          PageSize="15"
          AllowRowClick="true"
          AllowSorting="true"
          HeaderRowCssClass="bg-black text-black"
          DataProvider="CategoryDataProvider"
          OnRowClick="SelectCategory"
          Responsive="true"          
          class="table rounded-grid"
          @ref="DataGrid">

        <GridColumn TItem="Category" HeaderText="ID" PropertyName="CategoryId" SortKeySelector="item => item.Id" TextNoWrap="true">
            @context.Id
        </GridColumn>

        <GridColumn TItem="Category" HeaderText="Categoria" PropertyName="CategoryName" SortKeySelector="item => item.Name">
            @context.Name
        </GridColumn>

        <GridColumn TItem="Category" HeaderText="Opciones" PropertyName="Opciones" TextAlignment="Alignment.Center" Style="width: 100px;">
            <div class="options-container">
                <button class="option-button" @onclick="() => OnClickCategoryForm(context)">Editar</button>
                <button class="option-button" @onclick="() => DeleteCategoryAsync(context)">Eliminar</button>
            </div>
        </GridColumn>

    </Grid>
}

<section id="bottom" />

<script>
    var mybutton = document.getElementById("scrollBtn");
    var mybuttonTop = document.getElementById("scrollBtnDown");

    window.onscroll = function () { scrollFunction() };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            mybutton.style.display = "block";
        } else {
            mybutton.style.display = "none";
        }
    }

    window.addEventListener('scroll', (e) => {
        const body = document.body;
        const parent = body.parentElement;
        const pixelsFromBottom = body.scrollHeight - parent.clientHeight - 50;

        if (parent.scrollTop < pixelsFromBottom) {
            mybuttonTop.style.display = "block";
        } else {
            mybuttonTop.style.display = "none";
        }
    });

    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }

    function bottomFuction() {
        document.getElementById('bottom').scrollIntoView({ behavior: 'smooth' });
    }
</script>