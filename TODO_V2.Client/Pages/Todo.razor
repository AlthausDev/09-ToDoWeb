 @page "/todo/{Id}"
@using TODO_V2.Shared.Models
<PageTitle>ToDo List!</PageTitle>

@inject HttpClient Http
@inject NavigationManager NavManager
@inject IJSRuntime JS
@inject ILocalStorageService storageService


<Modal @ref="ModalInstance" Size="ModalSize.Regular" ShowCloseButton="false" UseStaticBackdrop="true" IsVerticallyCentered="true" I />
<Toasts class="p-3" Messages="messages" AutoHide="true" Delay="6000" StackLength="5" Placement="ToastsPlacement.TopRight" />

<nav class="upper-buttons">
    <button type="button" class="button-style" @onclick="OnClickTaskForm">Nueva Tarea</button>
    <button type="button" class="button-style" @onclick="OnClickLogOut">Logout</button>
</nav>

<Grid TItem="TaskItem"
    AllowFiltering="false"
    AllowPaging="true"
    PageSize="15"
    
    AllowSorting="true"
    HeaderRowCssClass="bg-black text-black"    
    DataProvider="UsersDataProvider"
    Responsive="true" class="table rounded-grid">

    <GridColumn TItem="TaskItem" HeaderText="Tarea" PropertyName="Name" SortKeySelector="item => item.Name" IsDefaultSortColumn="true">
        @context.Name
    </GridColumn>

    <GridColumn TItem="TaskItem" HeaderText="Categoria" PropertyName="CategoryId" SortKeySelector="item => item.CategoryId">
        @context.CategoryId
    </GridColumn>

    <GridColumn TItem="TaskItem" HeaderText="Fecha Creacion" PropertyName="Nombre" SortKeySelector="item => item.CreatedAt">
        @context.CreatedAt
    </GridColumn>

    <GridColumn TItem="TaskItem" HeaderText="Fecha Vencimiento" PropertyName="Fecha Vencimiento" SortKeySelector="item => item.ExpirationDate">
        @context.ExpirationDate
    </GridColumn>

    <GridColumn TItem="TaskItem" HeaderText="Estado" PropertyName="Estado" SortKeySelector="item => item.State">
        @context.State
    </GridColumn>

    <GridColumn TItem="TaskItem" HeaderText="Opciones" PropertyName="Opciones">
        <a href="#">Editar</a>
        <button class="option-button" @onclick="OnClickTaskForm">Editar</button>
        <button class="option-button">Eliminar</button>
    </GridColumn>
</Grid>

<section id="bottom" />

<script>
    var mybutton = document.getElementById("scrollBtn");
    var mybuttonTop = document.getElementById("scrollBtnDown");

    window.onscroll = function () { scrollFunction() };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            mybutton.style.display = "block";
        } else {
            mybutton.style.display = "none";
        }
    }

    window.addEventListener('scroll', (e) => {
        const body = document.body;
        const parent = body.parentElement;
        const pixelsFromBottom = body.scrollHeight - parent.clientHeight - 50;

        if (parent.scrollTop < pixelsFromBottom) {
            mybuttonTop.style.display = "block";
        } else {
            mybuttonTop.style.display = "none";
        }
    });

    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }

    function bottomFuction() {
        document.getElementById('bottom').scrollIntoView({ behavior: 'smooth' });
    }
</script>

<style>
    .upper-buttons {
        padding-bottom: 2.5em;
        display: flex;
        justify-content: space-between;        
    }

    .upper-buttons button {        
        box-shadow: 0 8px 22px rgba(3,233,244,.5);
        border: 1px solid #03e9f4;
        border-radius: 8px;
    }

    .rounded-grid {
        border-collapse: separate; 
        color:black;
    }

        .rounded-grid th,
        .rounded-grid td {
            padding: 10px;           
            border-radius: 8px;            
        }

        .rounded-grid th {
            background-color: #d9d9d9;
            font-weight: bold;
        }
  

    .rounded-grid tr:not(.selected-row) {
        cursor: pointer;
        background-color: white;
    }

    .rounded-grid tr:hover:not(.selected-row) {
        background-color: lightcyan;
    }

    .selected-row {
        background-color: #9ed9e0 !important;
    }    

    .bb-grid-pagination-text {
        padding: .375rem;
        color: white;
    }

    
    /* .page-item.disabled .page-link {
        color: #03e9f4;
        background-color: transparent;
        border: 1px solid #03e9f4;
    }

        .page-item.disabled:hover .page-link:hover {
            color: red; 
            background-color: #f0f0f0; 
            border-color: red;
        } */


   /*  .page-item.active .page-link { 
        box-shadow: 0 8px 22px rgba(3,233,244,.5);
        background-color: transparent;
        border: 1px solid #03e9f4;        
    } */
</style>

@* <Modal @ref="modal" Title="Formulario" Size="ModalSize.ExtraLarge">
    <BodyTemplate>
        <div id="formDiv">
            <label for="formTextBox">TaskItemName</label>
            <input type="text" id="formTextBox" Placeholder='Campo de texto de prueba'
                   @bind="@NuevaTaskItem.TaskItemName" @bind:event="oninput" @onkeyup="ValueChangeHandler" />
        </div>

        <div id="formDiv">
            <label for="textaskitem">
                Descripción
            </label>
            <textaskitem name="textaskitem" rows="20" id="formTextBox" Placeholder='Descripcion de prueba'
                      @bind="@NuevaTaskItem.Descripcion" @bind:event="oninput" @onkeyup="ValueChangeHandler" />

        </div>

        <div id="formDiv">
            <input type="checkbox" id="finalizadoCheckBox" name="Finalizado" @bind="NuevaTaskItem.Finalizado" />
            <label id="checkBoxLabel" for="finalizadoCheckBox">Finalizado</label>
        </div>
    </BodyTemplate>
    <FooterTemplate>
        <div id="FormButtons">
            <button class="btn btn-success" @onclick="execTaskItem" disabled="@IsDisabled">Aceptar</button>
            <button class="btn btn-danger" @onclick="HideModal">Cancelar</button>
        </div>
    </FooterTemplate>
</Modal>


<div class="scroll">   
    <div id="scrollBtnContainer">
        <button id="scrollBtnDown" onclick="bottomFuction()" title="Scroll to Bottom">
            <i class="oi oi-chevron-bottom"></i>
        </button>
    </div>
    <div id="scrollBtnContainertop">
        <button id="scrollBtn" onclick="topFunction()" title="Scroll to Top">
            <i class="oi oi-chevron-top"></i>
        </button>
    </div>
</div>



<style>

    .scroll {
        margin: 2%;
    }      

    #scrollBtn, #scrollBtnDown {
        position: fixed;
        right: 2%;
        border: 1px solid white;
        z-index: 99;
        background: linear-gradient(145deg, rgba(7,54,141,1) 0%, rgba(42,33,121,1) 33%, rgba(81,9,99,1) 70%, rgba(81,9,99,1) 100%);
        color: white;
        cursor: pointer;
        padding: 10px 15px 10px 15px;
        border-radius: 12px;
        font-size: 18px;
        box-shadow: 1px 1px 20px 4px rgba(107,11,131,1);
    }

    #scrollBtn {
        /* position: fixed; */
        display: none;
        bottom: 5%;
    }

    #scrollBtnDown {
        display: block;
        top: 20px;
    }

        #scrollBtn:hover, #scrollBtnDown:hover {
            background: linear-gradient(290deg, rgba(9,72,190,1) 0%, rgba(55,43,162,1) 33%, rgba(107,11,131,1) 70%, rgba(107,11,131,1) 100%);
        }
            

    #formDiv {
        display: flex;
        flex-direction: row;
        margin: 2% 5% 5%;
    }

        #formDiv label {
            display: inline-block;
            width: 10%;
            font-size: 14px;
            margin-right:5%;
        }

    label textaskitem {
        vertical-align: top;
    }

    label {
        text-align: left;
    }
    
</style>

 *@